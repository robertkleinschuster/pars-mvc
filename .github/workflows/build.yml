name: Build
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, intl, json, dom, gd
          ini-values: post_max_size=256M, max_execution_time=180
      - name: Bump version and push tag
        id: tag_version
        uses: hennejg/github-tag-action@v4.3.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: write version
        run: echo "<?php define('PARS_VERSION', '${{ steps.tag_version.outputs.new_tag }}');" > version.php
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Install dependencies
        run: composer install --no-dev --no-interaction
      - name: Clean files
        run: rm -rf node_modules & rm -rf yarn.lock & rm -rf composer.json & rm -rf package.json & rm -rf mkdocs.yml & rm -rf test & rm -rf docs & rm -rf phpcs.xml & rm -rf phpunit.xml.dist & rm -rf modules/*/node_modules & rm -rf modules/*/test & rm -rf modules/*/mkdocs.yml & rm -rf modules/*/mkdocs.yml & rm -rf modules/*/composer.lock & rm -rf modules/*/yarn.lock & rm -rf modules/*/package.json & rm -rf modules/*/composer.json & rm -rf modules/*/phpunit.xml.dist
      - name: Zip
        uses: papeloto/action-zip@v1
        with:
          files: .
          dest: ${{ github.event.repository.name }}.zip
      - name: Create a GitHub release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}_${{ steps.tag_version.outputs.new_tag }}.zip
          asset_content_type: application/zip
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}
          path: ${{ github.event.repository.name }}.zip
